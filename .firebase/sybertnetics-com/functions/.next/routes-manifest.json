{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/api/content/[path]",
      "regex": "^/api/content/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPpath": "nxtPpath"
      },
      "namedRegex": "^/api/content/(?<nxtPpath>[^/]+?)(?:/)?$"
    },
    {
      "page": "/blog/[slug]",
      "regex": "^/blog/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/blog/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/careers/[slug]",
      "regex": "^/careers/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/careers/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/news/[slug]",
      "regex": "^/news/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/news/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/beta-signups",
      "regex": "^/admin/beta\\-signups(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/beta\\-signups(?:/)?$"
    },
    {
      "page": "/admin/blog",
      "regex": "^/admin/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/blog(?:/)?$"
    },
    {
      "page": "/admin/careers",
      "regex": "^/admin/careers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/careers(?:/)?$"
    },
    {
      "page": "/admin/content",
      "regex": "^/admin/content(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/content(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/news",
      "regex": "^/admin/news(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/news(?:/)?$"
    },
    {
      "page": "/admin/newsletter",
      "regex": "^/admin/newsletter(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/newsletter(?:/)?$"
    },
    {
      "page": "/admin/page-content",
      "regex": "^/admin/page\\-content(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/page\\-content(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/careers",
      "regex": "^/careers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/careers(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/home",
      "regex": "^/home(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/home(?:/)?$"
    },
    {
      "page": "/news",
      "regex": "^/news(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/news(?:/)?$"
    },
    {
      "page": "/runedrive",
      "regex": "^/runedrive(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive(?:/)?$"
    },
    {
      "page": "/runedrive/about",
      "regex": "^/runedrive/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/about(?:/)?$"
    },
    {
      "page": "/runedrive/beta",
      "regex": "^/runedrive/beta(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/beta(?:/)?$"
    },
    {
      "page": "/runedrive/blog",
      "regex": "^/runedrive/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/blog(?:/)?$"
    },
    {
      "page": "/runedrive/community",
      "regex": "^/runedrive/community(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/community(?:/)?$"
    },
    {
      "page": "/runedrive/creators",
      "regex": "^/runedrive/creators(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/creators(?:/)?$"
    },
    {
      "page": "/runedrive/demo",
      "regex": "^/runedrive/demo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/demo(?:/)?$"
    },
    {
      "page": "/runedrive/universe",
      "regex": "^/runedrive/universe(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/runedrive/universe(?:/)?$"
    },
    {
      "page": "/solutions",
      "regex": "^/solutions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/solutions(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}